# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths:
    - "declarations/**"
    branches: [ master ]
  pull_request:
    branches: [ devel ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # - name: get list of changed files
    #   id: files
    #   uses: jitterbit/get-changed-files@v1

    # Runs a set of commands using the runners shell
    # - name: Echo list of files
    #   run: |
    #     echo "This is the list = ${{ steps.files.output.all }}"

    - id: files
      uses: jitterbit/get-changed-files@v1
      with:
        format: 'csv'
    - run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          echo "Do something with this ${changed_file}."
        done
        echo "This is the list ${{ steps.files.outputs.all }}"

    - name: show the output
      run:  echo "This is the list - again ${{ steps.files.outputs.all }}" 

    - name: 'Terraform Setup'
      uses: hashicorp/setup-terraform@v1
 #       with:
 #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: 'Terraform Init'
      run: terraform init ./declarations/terraform

 #     - name: 'Terraform Format'
 #       run: terraform fmt -check ./declarations/terraform

    - name: 'Terraform Plan'
      run: terraform plan -var 'password=${{ secrets.bigip_password }}' -var file_list=${{ steps.files.outputs.all }} ./declarations/terraform

    - name: 'Terraform Apply'
      run: terraform apply -var 'password=${{ secrets.bigip_password }}' -var file_list=${{ steps.files.outputs.all }} --auto-approve ./declarations/terraform
